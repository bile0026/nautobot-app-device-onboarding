# Generated by Django 3.2.25 on 2024-08-18 22:14

import uuid

import django.core.serializers.json
import django.db.models.deletion
import nautobot.core.models.fields
import nautobot.extras.models.mixins
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("extras", "0106_populate_default_statuses_and_roles_for_contact_associations"),
        ("ipam", "0046_update_all_charfields_max_length_to_255"),
        ("nautobot_device_onboarding", "0009_remove_models"),
    ]

    operations = [
        migrations.CreateModel(
            name="DiscoveredGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "_custom_field_data",
                    models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "abstract": False,
            },
            bases=(
                models.Model,
                nautobot.extras.models.mixins.DynamicGroupMixin,
                nautobot.extras.models.mixins.NotesMixin,
            ),
        ),
        migrations.CreateModel(
            name="DiscoveredIPAddress",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "_custom_field_data",
                    models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder),
                ),
                ("marked_for_onboarding", models.BooleanField(default=False)),
                (
                    "extra_info",
                    models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder),
                ),
                (
                    "discovered_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="nautobot_device_onboarding.discoveredgroup"
                    ),
                ),
                (
                    "ip_address",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="ipam.ipaddress"),
                ),
                ("tags", nautobot.core.models.fields.TagsField(through="extras.TaggedItem", to="extras.Tag")),
            ],
            options={
                "unique_together": {("discovered_group", "ip_address")},
            },
            bases=(
                models.Model,
                nautobot.extras.models.mixins.DynamicGroupMixin,
                nautobot.extras.models.mixins.NotesMixin,
            ),
        ),
        migrations.CreateModel(
            name="DiscoveredPort",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "_custom_field_data",
                    models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder),
                ),
                ("protocol", models.CharField(max_length=255)),
                ("port_id", models.CharField(max_length=255)),
                ("state", models.CharField(max_length=255)),
                ("reason", models.CharField(blank=True, max_length=255)),
                ("reason_ttl", models.CharField(blank=True, max_length=255)),
                (
                    "service",
                    models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder),
                ),
                (
                    "cpe",
                    nautobot.core.models.fields.JSONArrayField(
                        base_field=models.CharField(max_length=255), blank=True, null=True
                    ),
                ),
                (
                    "scripts",
                    nautobot.core.models.fields.JSONArrayField(
                        base_field=models.CharField(max_length=255), blank=True, null=True
                    ),
                ),
                (
                    "discovered_ip_address",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="nautobot_device_onboarding.discoveredipaddress"
                    ),
                ),
            ],
            options={
                "unique_together": {("discovered_ip_address", "protocol", "port_id")},
            },
            bases=(
                models.Model,
                nautobot.extras.models.mixins.DynamicGroupMixin,
                nautobot.extras.models.mixins.NotesMixin,
            ),
        ),
    ]
